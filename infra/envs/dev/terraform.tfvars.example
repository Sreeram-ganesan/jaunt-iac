# Development Environment - Terraform Variables Example
# Copy this file to terraform.tfvars and customize the values

# =============================================================================
# Basic Configuration
# =============================================================================

# AWS Configuration
aws_region   = "us-west-2"
project_name = "fastapi-infra"

# Common tags applied to all resources
common_tags = {
  Project     = "FastAPI Infrastructure"
  ManagedBy   = "Terraform"
  Environment = "dev"
  Owner       = "your-team@company.com"
}

# =============================================================================
# EC2 Configuration
# =============================================================================

# EC2 Instance Configuration
ec2_instance_type   = "t3.micro"    # Free tier eligible
ec2_key_name        = "your-key-pair-name"  # REQUIRED: Must exist in AWS
ec2_associate_public_ip = true
ec2_create_elastic_ip   = false     # Not needed for dev

# Storage Configuration
ec2_root_volume_size      = 20
ec2_root_volume_type      = "gp3"
ec2_root_volume_encrypted = true

# =============================================================================
# RDS Configuration - Choose Option A or B
# =============================================================================

# Option A: Use Existing RDS Instance
# Uncomment and configure these variables if you have an existing RDS instance
# use_existing_rds     = true
# existing_db_host     = "mydb.xxxxx.rds.amazonaws.com"
# existing_db_port     = 5432
# existing_db_name     = "fastapi_db"
# existing_db_username = "admin"
# existing_db_password = "your-secure-password"

# Option B: Create New RDS Instance (Default for dev)
use_existing_rds = false

# New RDS Configuration (when use_existing_rds = false)
rds_engine_version      = "16.2"
rds_instance_class      = "db.t3.micro"  # Free tier eligible
rds_allocated_storage   = 20
rds_max_allocated_storage = 100

# Database Credentials (for new RDS)
db_name     = "fastapi_dev"
db_username = "dbadmin"
# db_password = "your-secure-password"  # If not set, random password will be generated

# RDS Settings (dev-optimized)
rds_backup_retention_period = 1     # Minimal backup for dev
rds_skip_final_snapshot     = true  # Skip snapshot for dev
rds_deletion_protection     = false # Allow easy deletion in dev
rds_multi_az                = false # Single AZ for cost savings in dev

# Security Settings
store_db_password_in_secrets_manager = false  # Simplified for dev

# =============================================================================
# FastAPI Application Configuration
# =============================================================================

# Application Repository
fastapi_app_repo_url    = "https://github.com/your-username/fastapi-app.git"
fastapi_app_repo_branch = "develop"  # Use develop branch for dev environment
fastapi_app_port        = 8000
fastapi_log_level       = "info"     # More verbose for dev

# =============================================================================
# External API Configuration
# =============================================================================

# API Keys for External Services
# IMPORTANT: Never commit real API keys to version control
# Consider using environment variables or AWS Secrets Manager in production

# Tavily API Key
# tavily_api_key = "your-tavily-api-key-here"

# Gemini API Key  
# gemini_api_key = "your-gemini-api-key-here"

# =============================================================================
# S3 Configuration
# =============================================================================

# S3 Bucket for Application Data
# s3_bucket_name = "your-fastapi-dev-bucket"

# Additional S3 Buckets for Specific IAM Access (optional)
# s3_bucket_names = [
#   "your-fastapi-dev-bucket",
#   "your-fastapi-logs-bucket"
# ]

# =============================================================================
# Development Tips
# =============================================================================

# 1. Start with minimal configuration and scale up as needed
# 2. Use t3.micro instances to stay within free tier limits
# 3. Set deletion_protection = false for easy cleanup
# 4. Use single AZ RDS to save costs
# 5. Consider using existing RDS if you already have one running
# 6. API keys can be set as environment variables:
#    export TF_VAR_tavily_api_key="your-key"
#    export TF_VAR_gemini_api_key="your-key"